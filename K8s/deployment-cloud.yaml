---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: farefinder-db
  labels:
    app: farefinder-db
spec:
  serviceName: "farefinder-db"
  replicas: 1
  selector:
    matchLabels:
      app: farefinder-db
  template:
    metadata:
      labels:
        app: farefinder-db
    spec:
      containers:
      - name: farefinder-db
        image: docker.io/library/mysql:8
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_DATABASE
          value: farefinder_db
        - name: MYSQL_USER
          value: farefinder_user
        - name: MYSQL_PASSWORD
          value: password
        - name: MYSQL_AUTH_PLUGIN
          value: mysql_native_password
        livenessProbe:
          tcpSocket:
            port: 3306
  volumeClaimTemplates:
  - metadata:
      name: mysql-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "standard"  # Ensure this matches an available StorageClass
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: farefinder-db
spec:
  selector:
    app: farefinder-db
  ports:
  - port: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: farefinder-backend
  labels:
    app: farefinder-backend
spec:
  selector:
    matchLabels:
      app: farefinder-backend
  replicas: 1
  template:
    metadata:
      labels:
        app: farefinder-backend
    spec:
      containers:
      - name: farefinder-backend
        image: gcr.io/farefinder-451119/farefinder_backend:1.0.0
        imagePullPolicy: IfNotPresent
        command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          value: "mysql+pymysql://farefinder_user:password@farefinder-db:3306/farefinder_db"
---
apiVersion: v1
kind: Service
metadata:
  name: farefinder-backend
spec:
  type: ClusterIP
  selector:
    app: farefinder-backend
  ports:
  - port: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: farefinder-frontend
  labels:
    app: farefinder-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: farefinder-frontend
  template:
    metadata:
      labels:
        app: farefinder-frontend
    spec:
      containers:
      - name: farefinder-frontend
        image: gcr.io/farefinder-451119/farefinder_frontend:1.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: farefinder-frontend
spec:
  selector:
    app: farefinder-frontend
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
